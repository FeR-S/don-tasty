<?php

namespace common\models;

use yii\db\ActiveRecord;


use Yii;
use yii\helpers\Url;

/**
 * This is the model class for table "categories".
 *
 * @property integer $id
 * @property string $title
 * @property integer $parent_category_id
 * @property integer $label_class
 * @property integer $description
 */
class Category extends ActiveRecord
{
    /**
     * @return array
     */
    public function behaviors()
    {
        return [
            'slug' => [
                'class' => 'Zelenin\yii\behaviors\Slug',
                'slugAttribute' => 'slug',
                'attribute' => 'title',
                // optional params
                'ensureUnique' => true,
                'replacement' => '-',
                'lowercase' => true,
                'immutable' => false,
                // If intl extension is enabled, see http://userguide.icu-project.org/transforms/general.
                'transliterateOptions' => 'Russian-Latin/BGN; Any-Latin; Latin-ASCII; NFD; [:Nonspacing Mark:] Remove; NFC;'
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'category';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'slug'], 'required'],
            ['title', 'unique', 'message' => 'Такой заголовок уже существует. Заголовок категории должен быть уникальным!'],
            [['parent_category_id'], 'integer'],
            [['description'], 'string'],
            ['parent_category_id', 'default', 'value' => 0],
            [['title', 'slug'], 'string', 'max' => 1024],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Заголовок',
            'parent_category_id' => 'Parent Category ID',
        ];
    }

    /**
     * @return array
     */
    public static function getCategories()
    {
        $categories = Category::find()->all();
        return $categories;
    }

    /**
     * @return string
     */
    public function getUrl()
    {
        return '/recipes/' . $this->slug;
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRecipes()
    {
        return $this->hasMany(Recipe::className(), ['category_id' => 'id']);
    }

    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
